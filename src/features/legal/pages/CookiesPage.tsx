import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { Typography, Card, Row, Col, Switch, Button, Alert, Table, Tag } from 'antd';
import { 
  BookOutlined,
  SettingOutlined,
  EyeOutlined,
  BarChartOutlined,
  LockOutlined,
  DeleteOutlined,
  CheckCircleOutlined
} from '@ant-design/icons';
import MainLayout from '@/components/layout/MainLayout';

const { Title, Paragraph, Text } = Typography;

const CookiesPage: React.FC = () => {
  const [cookieSettings, setCookieSettings] = useState({
    necessary: true, // Always true, cannot be disabled
    functional: true,
    analytics: true,
    marketing: false
  });

  const cookieTypes = [
    {
      type: 'Necessary',
      icon: <LockOutlined />,
      title: 'Cookie c·∫ßn thi·∫øt',
      description: 'Nh·ªØng cookie c·∫ßn thi·∫øt ƒë·ªÉ website ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng. Kh√¥ng th·ªÉ t·∫Øt.',
      enabled: cookieSettings.necessary,
      canDisable: false,
      color: 'red',
      examples: ['Phi√™n ƒëƒÉng nh·∫≠p', 'Gi·ªè h√†ng', 'B·∫£o m·∫≠t', 'T√πy ch·ªçn ng√¥n ng·ªØ'],
      duration: 'Phi√™n l√†m vi·ªác ho·∫∑c 1 nƒÉm'
    },
    {
      type: 'Functional',
      icon: <SettingOutlined />,
      title: 'Cookie ch·ª©c nƒÉng',
      description: 'Gi√∫p website ghi nh·ªõ c√°c t√πy ch·ªçn c·ªßa b·∫°n ƒë·ªÉ c·∫£i thi·ªán tr·∫£i nghi·ªám.',
      enabled: cookieSettings.functional,
      canDisable: true,
      color: 'blue',
      examples: ['Theme t·ªëi/s√°ng', 'K√≠ch th∆∞·ªõc font', 'V·ªã tr√≠ ƒë·ªãa l√Ω', 'T√πy ch·ªçn hi·ªÉn th·ªã'],
      duration: '1 nƒÉm'
    },
    {
      type: 'Analytics',
      icon: <BarChartOutlined />,
      title: 'Cookie ph√¢n t√≠ch',
      description: 'Gi√∫p ch√∫ng t√¥i hi·ªÉu c√°ch b·∫°n s·ª≠ d·ª•ng website ƒë·ªÉ c·∫£i thi·ªán d·ªãch v·ª•.',
      enabled: cookieSettings.analytics,
      canDisable: true,
      color: 'green',
      examples: ['Google Analytics', 'Heatmap', 'Th·ªëng k√™ truy c·∫≠p', 'B√°o c√°o l·ªói'],
      duration: '2 nƒÉm'
    },
    {
      type: 'Marketing',
      icon: <EyeOutlined />,
      title: 'Cookie marketing',
      description: 'ƒê∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ hi·ªÉn th·ªã qu·∫£ng c√°o ph√π h·ª£p v·ªõi s·ªü th√≠ch c·ªßa b·∫°n.',
      enabled: cookieSettings.marketing,
      canDisable: true,
      color: 'orange',
      examples: ['Facebook Pixel', 'Google Ads', 'Remarketing', 'Qu·∫£ng c√°o c√° nh√¢n h√≥a'],
      duration: '90 ng√†y'
    }
  ];

  const specificCookies = [
    {
      name: '_mosaic_session',
      purpose: 'Qu·∫£n l√Ω phi√™n ƒëƒÉng nh·∫≠p',
      type: 'Necessary',
      duration: 'Phi√™n l√†m vi·ªác',
      domain: 'mosaicstore.vercel.app'
    },
    {
      name: '_mosaic_cart',
      purpose: 'L∆∞u tr·ªØ gi·ªè h√†ng',
      type: 'Necessary',
      duration: '7 ng√†y',
      domain: 'mosaicstore.vercel.app'
    },
    {
      name: '_mosaic_lang',
      purpose: 'Ghi nh·ªõ ng√¥n ng·ªØ',
      type: 'Functional',
      duration: '1 nƒÉm',
      domain: 'mosaicstore.vercel.app'
    },
    {
      name: '_mosaic_theme',
      purpose: 'Ghi nh·ªõ theme t·ªëi/s√°ng',
      type: 'Functional',
      duration: '1 nƒÉm',
      domain: 'mosaicstore.vercel.app'
    },
    {
      name: '_ga',
      purpose: 'Google Analytics tracking',
      type: 'Analytics',
      duration: '2 nƒÉm',
      domain: '.mosaicstore.vercel.app'
    },
    {
      name: '_fbp',
      purpose: 'Facebook Pixel tracking',
      type: 'Marketing',
      duration: '90 ng√†y',
      domain: '.mosaicstore.vercel.app'
    }
  ];

  const handleCookieToggle = (type: string, enabled: boolean) => {
    setCookieSettings(prev => ({
      ...prev,
      [type]: enabled
    }));
  };

  const saveSettings = () => {
    // Save settings to localStorage or send to server
    localStorage.setItem('mosaic_cookie_preferences', JSON.stringify(cookieSettings));
    alert('ƒê√£ l∆∞u t√πy ch·ªçn cookie!');
  };

  const clearAllCookies = () => {
    // Clear all cookies except necessary ones
    document.cookie.split(";").forEach(function(c) { 
      document.cookie = c.replace(/^ +/, "").replace(/=.*/, "=;expires=" + new Date().toUTCString() + ";path=/"); 
    });
    alert('ƒê√£ x√≥a t·∫•t c·∫£ cookie kh√¥ng c·∫ßn thi·∫øt!');
  };

  const columns = [
    {
      title: 'T√™n Cookie',
      dataIndex: 'name',
      key: 'name',
      render: (text: string) => <Text code>{text}</Text>
    },
    {
      title: 'M·ª•c ƒë√≠ch',
      dataIndex: 'purpose',
      key: 'purpose'
    },
    {
      title: 'Lo·∫°i',
      dataIndex: 'type',
      key: 'type',
      render: (type: string) => {
        const colors: { [key: string]: string } = {
          'Necessary': 'red',
          'Functional': 'blue', 
          'Analytics': 'green',
          'Marketing': 'orange'
        };
        return <Tag color={colors[type]}>{type}</Tag>;
      }
    },
    {
      title: 'Th·ªùi h·∫°n',
      dataIndex: 'duration',
      key: 'duration'
    },
    {
      title: 'Domain',
      dataIndex: 'domain',
      key: 'domain',
      render: (text: string) => <Text type="secondary">{text}</Text>
    }
  ];

  return (
    <MainLayout>
      {/* Hero Section */}
      <section className="bg-gradient-to-br from-orange-50 via-amber-50 to-yellow-50 dark:from-orange-900/20 dark:via-amber-900/20 dark:to-yellow-900/20 py-20">
        <div className="container mx-auto px-4 text-center">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
          >
            <BookOutlined className="text-6xl text-orange-500 mb-6" />
            <Title level={1} className="mb-6 text-4xl md:text-6xl font-bold bg-gradient-to-r from-orange-600 via-amber-600 to-yellow-600 bg-clip-text text-transparent">
              Ch√≠nh s√°ch Cookie
            </Title>
            <Paragraph className="text-xl text-gray-600 dark:text-gray-300 mb-8 max-w-3xl mx-auto">
              T√¨m hi·ªÉu v·ªÅ c√°ch MOSAIC s·ª≠ d·ª•ng cookie ƒë·ªÉ c·∫£i thi·ªán tr·∫£i nghi·ªám c·ªßa b·∫°n tr√™n website
            </Paragraph>
            <Text className="text-sm text-gray-500 dark:text-gray-400">
              C·∫≠p nh·∫≠t l·∫ßn cu·ªëi: 15 th√°ng 6, 2025
            </Text>
          </motion.div>
        </div>
      </section>

      {/* What are Cookies */}
      <section className="py-16">
        <div className="container mx-auto px-4">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
          >
            <div className="max-w-4xl mx-auto">
              <Title level={2} className="text-center mb-8">
                Cookie l√† g√¨?
              </Title>
              
              <Card className="mb-8">
                <Row gutter={[24, 24]} align="middle">
                  <Col xs={24} md={8} className="text-center">
                    <motion.div
                      animate={{
                        rotate: [0, 10, -10, 0],
                        scale: [1, 1.1, 1],
                      }}
                      transition={{
                        duration: 3,
                        repeat: Infinity,
                        ease: "easeInOut"
                      }}
                      className="text-8xl mb-4"
                    >
                      üç™
                    </motion.div>
                  </Col>
                  <Col xs={24} md={16}>
                    <Paragraph className="text-lg leading-relaxed dark:text-gray-300">
                      Cookie l√† nh·ªØng t·ªáp vƒÉn b·∫£n nh·ªè ƒë∆∞·ª£c l∆∞u tr·ªØ tr√™n thi·∫øt b·ªã c·ªßa b·∫°n khi b·∫°n 
                      truy c·∫≠p website. Ch√∫ng gi√∫p website "ghi nh·ªõ" th√¥ng tin v·ªÅ l∆∞·ª£t truy c·∫≠p 
                      c·ªßa b·∫°n, gi√∫p c·∫£i thi·ªán tr·∫£i nghi·ªám s·ª≠ d·ª•ng.
                    </Paragraph>
                    <Paragraph className="text-lg leading-relaxed dark:text-gray-300">
                      MOSAIC s·ª≠ d·ª•ng cookie ƒë·ªÉ ƒë·∫£m b·∫£o website ho·∫°t ƒë·ªông t·ªët, cung c·∫•p c√°c t√≠nh nƒÉng 
                      ƒë∆∞·ª£c c√° nh√¢n h√≥a v√† ph√¢n t√≠ch c√°ch s·ª≠ d·ª•ng c·ªßa b·∫°n ƒë·ªÉ c·∫£i thi·ªán d·ªãch v·ª•.
                    </Paragraph>
                  </Col>
                </Row>
              </Card>

              <Alert
                message="üîí Cam k·∫øt b·∫£o m·∫≠t"
                description="MOSAIC cam k·∫øt b·∫£o v·ªá quy·ªÅn ri√™ng t∆∞ c·ªßa b·∫°n. Ch√∫ng t√¥i ch·ªâ s·ª≠ d·ª•ng cookie c·∫ßn thi·∫øt cho ho·∫°t ƒë·ªông c·ªßa website v√† kh√¥ng chia s·∫ª th√¥ng tin c√° nh√¢n v·ªõi b√™n th·ª© ba m√† kh√¥ng c√≥ s·ª± ƒë·ªìng √Ω c·ªßa b·∫°n."
                type="info"
                showIcon
              />
            </div>
          </motion.div>
        </div>
      </section>

      {/* Cookie Types */}
      <section className="py-16 bg-gray-50 dark:bg-gray-800">
        <div className="container mx-auto px-4">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
          >
            <Title level={2} className="text-center mb-16">
              C√°c lo·∫°i Cookie ch√∫ng t√¥i s·ª≠ d·ª•ng
            </Title>
            
            <Row gutter={[24, 24]}>
              {cookieTypes.map((cookie, index) => (
                <Col xs={24} lg={12} key={cookie.type}>
                  <motion.div
                    initial={{ opacity: 0, y: 30 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.6, delay: index * 0.1 }}
                    whileHover={{ scale: 1.02, y: -5 }}
                  >
                    <Card className="h-full hover:shadow-lg transition-all duration-300">
                      <div className="flex items-start justify-between mb-4">
                        <div className="flex items-center">
                          <div className={`text-3xl text-${cookie.color}-500 mr-4`}>
                            {cookie.icon}
                          </div>
                          <div>
                            <Title level={4} className="mb-1">{cookie.title}</Title>
                            <Text className={`text-${cookie.color}-600 font-medium`}>
                              {cookie.type}
                            </Text>
                          </div>
                        </div>
                        <Switch
                          checked={cookie.enabled}
                          disabled={!cookie.canDisable}
                          onChange={(enabled) => handleCookieToggle(cookie.type.toLowerCase(), enabled)}
                          className={!cookie.canDisable ? 'opacity-50' : ''}
                        />
                      </div>
                      
                      <Paragraph className="dark:text-gray-300 mb-4 leading-relaxed">
                        {cookie.description}
                      </Paragraph>
                      
                      <div className="space-y-3">
                        <div>
                          <Text strong className="block mb-2">V√≠ d·ª•:</Text>
                          <div className="flex flex-wrap gap-1">
                            {cookie.examples.map((example, idx) => (
                              <Tag key={idx} color={cookie.color} className="mb-1">
                                {example}
                              </Tag>
                            ))}
                          </div>
                        </div>
                        
                        <div className="bg-gray-50 dark:bg-gray-700 rounded-lg p-3">
                          <Text strong className="text-gray-700 dark:text-gray-300">
                            ‚è±Ô∏è Th·ªùi h·∫°n l∆∞u tr·ªØ: {cookie.duration}
                          </Text>
                        </div>
                      </div>
                    </Card>
                  </motion.div>
                </Col>
              ))}
            </Row>

            {/* Cookie Settings Panel */}
            <motion.div
              className="mt-12"
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: 0.4 }}
            >
              <Card title="üîß Qu·∫£n l√Ω t√πy ch·ªçn Cookie">
                <div className="space-y-4 mb-6">
                  <Alert
                    message="L∆∞u √Ω quan tr·ªçng"
                    description="Vi·ªác t·∫Øt m·ªôt s·ªë cookie c√≥ th·ªÉ ·∫£nh h∆∞·ªüng ƒë·∫øn tr·∫£i nghi·ªám s·ª≠ d·ª•ng website. Cookie c·∫ßn thi·∫øt kh√¥ng th·ªÉ ƒë∆∞·ª£c t·∫Øt v√¨ ch√∫ng c·∫ßn thi·∫øt cho ho·∫°t ƒë·ªông c∆° b·∫£n c·ªßa website."
                    type="warning"
                    showIcon
                  />
                  
                  <div className="flex flex-wrap gap-3">
                    <Button 
                      type="primary" 
                      icon={<CheckCircleOutlined />}
                      onClick={saveSettings}
                    >
                      L∆∞u t√πy ch·ªçn
                    </Button>
                    <Button 
                      icon={<DeleteOutlined />}
                      onClick={clearAllCookies}
                    >
                      X√≥a t·∫•t c·∫£ Cookie
                    </Button>
                    <Button 
                      type="dashed"
                      onClick={() => {
                        setCookieSettings({
                          necessary: true,
                          functional: true,
                          analytics: true,
                          marketing: true
                        });
                      }}
                    >
                      Ch·∫•p nh·∫≠n t·∫•t c·∫£
                    </Button>
                  </div>
                </div>
              </Card>
            </motion.div>
          </motion.div>
        </div>
      </section>

      {/* Specific Cookies Table */}
      <section className="py-16">
        <div className="container mx-auto px-4">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
          >
            <Title level={2} className="text-center mb-12">
              Chi ti·∫øt c√°c Cookie c·ª• th·ªÉ
            </Title>
            
            <Card>
              <Table
                columns={columns}
                dataSource={specificCookies}
                pagination={false}
                rowKey="name"
                scroll={{ x: 800 }}
                className="cookie-table"
              />
            </Card>
          </motion.div>
        </div>
      </section>

      {/* How to Manage Cookies */}
      <section className="py-16 bg-gradient-to-br from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20">
        <div className="container mx-auto px-4">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
          >
            <Title level={2} className="text-center mb-12">
              C√°ch qu·∫£n l√Ω Cookie trong tr√¨nh duy·ªát
            </Title>
            
            <Row gutter={[24, 24]}>
              <Col xs={24} md={8}>
                <Card className="h-full text-center hover:shadow-lg transition-all duration-300">
                  <div className="text-4xl mb-4">üåê</div>
                  <Title level={4}>Chrome</Title>
                  <Paragraph className="text-sm">
                    Settings ‚Üí Privacy and security ‚Üí Cookies and other site data
                  </Paragraph>
                </Card>
              </Col>
              <Col xs={24} md={8}>
                <Card className="h-full text-center hover:shadow-lg transition-all duration-300">
                  <div className="text-4xl mb-4">ü¶ä</div>
                  <Title level={4}>Firefox</Title>
                  <Paragraph className="text-sm">
                    Options ‚Üí Privacy & Security ‚Üí Cookies and Site Data
                  </Paragraph>
                </Card>
              </Col>
              <Col xs={24} md={8}>
                <Card className="h-full text-center hover:shadow-lg transition-all duration-300">
                  <div className="text-4xl mb-4">üß≠</div>
                  <Title level={4}>Safari</Title>
                  <Paragraph className="text-sm">
                    Preferences ‚Üí Privacy ‚Üí Manage Website Data
                  </Paragraph>
                </Card>
              </Col>
            </Row>

            <Card className="mt-8">
              <Title level={4} className="mb-4">üì± Tr√™n thi·∫øt b·ªã di ƒë·ªông</Title>
              <Row gutter={[16, 16]}>
                <Col xs={24} md={12}>
                  <div className="bg-gray-50 dark:bg-gray-700 rounded-lg p-4">
                    <Title level={5}>iOS Safari:</Title>
                    <Text className="text-sm">
                      Settings ‚Üí Safari ‚Üí Advanced ‚Üí Website Data
                    </Text>
                  </div>
                </Col>
                <Col xs={24} md={12}>
                  <div className="bg-gray-50 dark:bg-gray-700 rounded-lg p-4">
                    <Title level={5}>Android Chrome:</Title>
                    <Text className="text-sm">
                      Chrome ‚Üí Settings ‚Üí Privacy ‚Üí Clear browsing data
                    </Text>
                  </div>
                </Col>
              </Row>
            </Card>
          </motion.div>
        </div>
      </section>

      {/* Contact Section */}
      <section className="bg-gradient-to-r from-orange-500 to-amber-600 text-white py-16">
        <div className="container mx-auto px-4 text-center">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
          >
            <BookOutlined className="text-5xl mb-6" />
            <Title level={2} className="text-white mb-4">
              C√≥ th·∫Øc m·∫Øc v·ªÅ Cookie?
            </Title>
            <Paragraph className="text-xl text-white/90 mb-8 max-w-2xl mx-auto">
              Li√™n h·ªá v·ªõi ch√∫ng t√¥i n·∫øu b·∫°n c·∫ßn h·ªó tr·ª£ th√™m v·ªÅ ch√≠nh s√°ch cookie
            </Paragraph>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <motion.a
                href="mailto:mosaic.threadsstory@gmail.com"
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className="bg-white text-orange-600 px-8 py-3 rounded-full font-semibold shadow-lg hover:shadow-xl transition-all duration-300 no-underline"
              >
                üìß Email h·ªó tr·ª£
              </motion.a>
              <motion.a
                href="tel:+84833223299"
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className="bg-transparent border-2 border-white text-white px-8 py-3 rounded-full font-semibold hover:bg-white hover:text-orange-600 transition-all duration-300 no-underline"
              >
                üìû Hotline: 0833 223 299
              </motion.a>
            </div>
          </motion.div>
        </div>
      </section>

      <style>{`
        .cookie-table .ant-table-thead > tr > th {
          background-color: #fafafa;
          font-weight: 600;
        }
        
        .cookie-table .ant-table-tbody > tr:hover > td {
          background-color: #fff7e6;
        }
        
        @media (max-width: 768px) {
          .cookie-table .ant-table-thead > tr > th,
          .cookie-table .ant-table-tbody > tr > td {
            font-size: 12px;
            padding: 8px 4px;
          }
        }
      `}</style>
    </MainLayout>
  );
};

export default CookiesPage;